/*
 * Copyright (C) 2022-present Shanghai HPC-NOW Technologies Co., Ltd.
 * This code is distributed under the license: MIT License
 * Originally written by Zhenrong WANG
 * mailto: zhenrongwang@live.com | wangzhenrong@hpc-now.com
 */
 
#CREATE_DATABASE_NODE
resource "aws_instance" "database" {
  availability_zone = "DEFAULT_ZONE_ID"
  subnet_id = aws_subnet.hpc_stack_subnet.id
  vpc_security_group_ids = [aws_security_group.mysql_intra.id]
#INSERT_AMI_HERE
  instance_type = data.aws_ec2_instance_types.t2c1g.instance_types.0
  root_block_device {
    volume_size = 30
  }
  tags = {
    Name = "database-RG_NAME"
    Project = "RG_NAME"
  }
  user_data = <<EOF
#!/bin/bash
echo "${aws_instance.natgw.private_ip}" >> /dev/null
echo -e "${var.database_root_passwd}" > /root/mariadb_root_passwd.txt
echo -e "${var.database_acct_passwd}" > /root/mariadb_slurm_acct_db_pw.txt
sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
sed -i '/PermitRootLogin no/d' /etc/ssh/sshd_config
echo -e "PermitRootLogin yes" >> /etc/ssh/sshd_config
systemctl restart sshd
systemctl enable sshd
echo '${var.database_root_passwd}' | passwd root --stdin >> /dev/null 2>&1

# Check whether it is global regions or China regions
# If global regions, we should modify the yum repo config file

ping -c 1 -t 1 www.google.com >> /dev/null 2>&1
if[ $? -eq 0 ]; then
  /bin/cp -r /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak
  sed -i 's/mirrorlist=/#mirrorlist=/g' /etc/yum.repos.d/CentOS-Base.repo
  sed -i 's@#baseurl=http://mirror.centos.org@baseurl=https://mirror.nsc.liu.se/centos-store@g' /etc/yum.repos.d/CentOS-Base.repo
fi

# Wait for 2 minutes
for i in $(seq 1 120)
do
  echo -e "db_init_wait ... ... ... ... ... ... ... ... ... ...$i" >> /tmp/db_init_wait.log
  sleep 1
done

# Check whether NetworkManager is installed. If installed, use it to manage the DNS

nmcli con show >> /dev/null 2>&1
if[ $? -eq 0 ]; then
  con_name=`nmcli con show | awk 'NR==2 {print $1}'`
  nmcli con mod $con_name ipv4.dns "8.8.8.8 8.8.4.4"
  systemctl restart NetworkManager
fi

# Get and run the remote script 

curl ${var.db_init_scripts} -o /opt/db_init.sh > /tmp/db_init_dl.log 2>&1
bash /opt/db_init.sh
cp -r /tmp/db*.log /var/log/
EOF
}

resource "aws_ec2_instance_state" "db_state" {
  instance_id = aws_instance.database.id
  state = "running"
}
