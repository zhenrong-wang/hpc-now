/*
 * Copyright (C) 2022-present Shanghai HPC-NOW Technologies Co., Ltd.
 * This code is distributed under the license: MIT License
 * Originally written by Zhenrong WANG
 * mailto: zhenrongwang@live.com | wangzhenrong@hpc-now.com
 */
 
#create master and compute nodes
resource "aws_instance" "master" {
  availability_zone = "DEFAULT_ZONE_ID"
  subnet_id = aws_subnet.hpc_stack_pub_subnet.id
#  associate_public_ip_address = "true"
  vpc_security_group_ids = [aws_security_group.group.id]
#INSERT_AMI_HERE
  instance_type = data.aws_ec2_instance_types.MASTER_INST.instance_types.0
  root_block_device {
    volume_size = 30
  }
  tags = {
    Name = "master-RG_NAME"
    Project = "RG_NAME"
  }
  user_data = <<EOF
#!/bin/bash
touch /root/CLOUD_FLAG && chmod 600 /root/CLOUD_FLAG
hostnamectl set-hostname master
echo '${var.master_passwd}' | passwd root --stdin >> /dev/null 2>&1
#id ec2-user >> /dev/null 2>&1
#if [ $? -eq 0 ]; then
#  userdel -f ec2-user
#fi
id openeuler >> /dev/null 2>&1
if [ $? -eq 0 ]; then
  userdel -f openeuler
fi
sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
sed -i '/PermitRootLogin no/d' /etc/ssh/sshd_config
echo -e "PermitRootLogin yes" >> /etc/ssh/sshd_config
yum -y install at
systemctl start atd && systemctl enable atd
rm -rf /root/.ssh/id_rsa.pub
rm -rf /root/.ssh/id_rsa
rm -rf ~/.ssh/authorized_keys
rm -rf /root/.ssh/known_hosts
ssh-keygen -t rsa -N '' -f /root/.ssh/id_rsa -q
cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys
echo -e "\nPUBLIC_KEY" >> /root/.ssh/authorized_keys
systemctl restart sshd
echo -e "\nPUBLIC_KEY" >> /etc/now-pubkey.txt
mkdir -p /usr/hpc-now/
mkdir /hpc_apps && mkdir /hpc_data
yum -y install nfs-utils
mount -t nfs -o vers=4,minorversion=0,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport ${aws_efs_mount_target.hpc_apps_mount_target.ip_address}:/ /hpc_apps
mount -t nfs -o vers=4,minorversion=0,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport ${aws_efs_mount_target.hpc_data_mount_target.ip_address}:/ /hpc_data
echo -e "${aws_efs_mount_target.hpc_apps_mount_target.ip_address}:/ /hpc_apps nfs vers=4,minorversion=0,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev,noresvport 0 0" >> /etc/fstab
echo -e "${aws_efs_mount_target.hpc_data_mount_target.ip_address}:/ /hpc_data nfs vers=4,minorversion=0,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,_netdev,noresvport 0 0" >> /etc/fstab
master_private_ip=`ifconfig | grep inet | head -n1 | awk '{print $2}'`
if [ ! -f /root/hostfile ]; then
  echo -e "$master_private_ip\tmaster" > /root/hostfile
fi
echo -e "export HPC_USER_NUM=${var.HPC_USER_NUM}" >> /etc/profile
echo -e "${aws_instance.database.private_ip}\tmariadb" > /root/mariadb_private_ip.txt
echo -e "${var.database_root_passwd}" > /root/mariadb_root_passwd.txt
echo -e "${var.database_acct_passwd}" > /root/mariadb_slurm_acct_db_pw.txt
echo -e "${var.master_passwd}" > /root/master_passwd.txt && echo -e "${var.compute_passwd}" > /root/compute_passwd.txt
yum -y install sshpass readhat-lsb
curl ${var.cluster_init_scripts} | bash -s ${var.HPC_USER_NUM} ${var.master_init_parameters} > /var/log/cluster_init_master_raw.log 2>&1
EOF
}

resource "aws_ec2_instance_state" "m_state" {
  instance_id = aws_instance.master.id
  state = "running"
}